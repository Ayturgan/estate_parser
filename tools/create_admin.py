#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã Estate Parser
"""

import sys
import os
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', 'backend'))

from app.services.auth_service import auth_service
from app.database.models import AdminCreate

DATABASE_URL = "postgresql://estate_user:admin123@localhost:5432/estate_db"

def create_first_admin():
    """–°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("üîê –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Estate Parser")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    if not username:
        print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        return False
    
    password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤): ").strip()
    if len(password) < 6:
        print("‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!")
        return False
    
    full_name = input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
    if not full_name:
        full_name = None
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        engine = create_engine(DATABASE_URL)
        SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
        
        with SessionLocal() as db:
            admin_data = AdminCreate(
                username=username,
                password=password,
                full_name=full_name
            )
            
            new_admin = auth_service.create_admin(db, admin_data)
            
            print("\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"   ID: {new_admin.id}")
            print(f"   –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {new_admin.username}")
            print(f"   –ü–æ–ª–Ω–æ–µ –∏–º—è: {new_admin.full_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
            print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {new_admin.created_at}")
            print("\nüåê –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É:")
            print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/login")
            print("   2. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            print("   3. –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
            
            return True
            
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(DATABASE_URL)
        SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
        
        with SessionLocal() as db:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
            from app.database.db_models import DBAdmin
            existing_admins = db.query(DBAdmin).count()
            
            if existing_admins > 0:
                print(f"‚ÑπÔ∏è  –í —Å–∏—Å—Ç–µ–º–µ —É–∂–µ –µ—Å—Ç—å {existing_admins} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä(–æ–≤).")
                choice = input("–°–æ–∑–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω–æ–≥–æ? (y/N): ").strip().lower()
                if choice not in ['y', 'yes', '–¥–∞', '–¥']:
                    print("–û—Ç–º–µ–Ω–µ–Ω–æ.")
                    return
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        success = create_first_admin()
        
        if success:
            print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.")
        else:
            print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            sys.exit(1)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞.")
        sys.exit(1)

if __name__ == "__main__":
    main() 