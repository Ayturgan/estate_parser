services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
    volumes:
      - ./:/app
    ports:
      - "${API_PORT}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  db:
    image: postgres:16-alpine 
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432" 
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin123
      ports:
        - "5050:80"
      depends_on:
        - db
      volumes:
        - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=real-estate-cluster
      - node.name=real-estate-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  scrapy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapy_container
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    entrypoint: ["/entrypoint-scrapy.sh"]
    volumes:
      - ./real_estate_scraper/real_estate_scraper:/app/real_estate_scraper/real_estate_scraper
      - ./real_estate_scraper/real_estate_scraper/configs:/app/real_estate_scraper/real_estate_scraper/configs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

volumes:
  db_data:
  pgadmin_data:
  elasticsearch_data: