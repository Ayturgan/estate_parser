
services:
  db:
    image: postgres:16-alpine # Используем официальный образ PostgreSQL, версия 16, легковесный alpine
    container_name: real_estate_parser_db # Имя контейнера
    environment:
      POSTGRES_DB: real_estate_db       # Имя базы данных
      POSTGRES_USER: real_estate_user   # Имя пользователя БД
      POSTGRES_PASSWORD: admin123 # <-- ЗАМЕНИ НА СВОЙ НАДЕЖНЫЙ ПАРОЛЬ!
    ports:
      - "5432:5432" # Пробрасываем порт 5432 контейнера на порт 5432 твоей машины
    volumes:
      - db_data:/var/lib/postgresql/data # Сохраняем данные БД в постоянное хранилище (volume)
    healthcheck: # Проверка здоровья БД
      test: ["CMD-SHELL", "pg_isready -U real_estate_user -d real_estate_db"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com  # любой email
        PGADMIN_DEFAULT_PASSWORD: admin123      # задай пароль для входа в веб-интерфейс
      ports:
        - "5050:80"  # Открываем порт 5050 на твоей машине
      depends_on:
        - db
      volumes:
        - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=real-estate-cluster
      - node.name=real-estate-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  kibana:
    image: kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

volumes:
  db_data:
  pgadmin_data:
  elasticsearch_data: